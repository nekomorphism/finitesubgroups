(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1804084,      39700]
NotebookOptionsPosition[   1795099,      39541]
NotebookOutlinePosition[   1795749,      39563]
CellTagsIndexPosition[   1795706,      39560]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"$PrePrint", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "#", "]"}], ",", 
      RowBox[{"MatrixForm", "[", "#", "]"}], ",", "#"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Dataset", ",", 
    RowBox[{"MaxItems", "->", 
     RowBox[{"{", 
      RowBox[{"12", ",", "13"}], "}"}]}]}], "]"}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.852053430156336*^9, 3.852053447001143*^9}, {
  3.85205770270467*^9, 3.852057796192678*^9}, {3.852057988251617*^9, 
  3.852058003312772*^9}, {3.8520580986812067`*^9, 3.852058114537491*^9}, {
  3.852058157857358*^9, 3.8520581723850517`*^9}, {3.852058225670539*^9, 
  3.852058228115282*^9}, {3.852058696198365*^9, 3.852058698416895*^9}, {
  3.85212780847748*^9, 3.852127812452169*^9}, {3.852128145455917*^9, 
  3.852128150871518*^9}, {3.852128298087631*^9, 3.8521283550597477`*^9}, {
  3.852128396944993*^9, 3.852128397187827*^9}, {3.852128427610196*^9, 
  3.8521284376267433`*^9}, {3.852128720063382*^9, 3.852128727278405*^9}, {
  3.852129859096349*^9, 3.852129859220459*^9}, {3.852129953001335*^9, 
  3.852129953108656*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"baeca54b-74ca-4025-93c7-af758501eb28"],

Cell["The 4 basic quaternions", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.8512641065087557`*^9, 
  3.851264118260437*^9}},ExpressionUUID->"364d5abc-afe4-45ea-adb1-\
599c744a9f8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q1", " ", "=", 
   RowBox[{"IdentityMatrix", "[", "4", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QI", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToQ", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"-", "b"}], ",", 
       RowBox[{"-", "c"}], ",", 
       RowBox[{"-", "d"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", 
       RowBox[{"-", "d"}], ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "a", ",", 
       RowBox[{"-", "b"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       RowBox[{"-", "c"}], ",", "b", ",", "a"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.850814062277169*^9, 3.850814074435463*^9}, {
   3.850814424251275*^9, 3.850814427683329*^9}, {3.8508145392833652`*^9, 
   3.8508146184988117`*^9}, {3.850814795180094*^9, 3.8508148032118273`*^9}, {
   3.850818785542111*^9, 3.85081887608619*^9}, {3.850818948365858*^9, 
   3.850818950142157*^9}, {3.850825541973431*^9, 3.850825572117547*^9}, {
   3.851197529181665*^9, 3.8511975587172337`*^9}, {3.851197592932929*^9, 
   3.851197754356751*^9}, {3.851263216421773*^9, 3.851263300398837*^9}, {
   3.851263351368894*^9, 3.85126346079493*^9}, {3.851263556049165*^9, 
   3.851263578343049*^9}, {3.8512636370557613`*^9, 3.8512636621400414`*^9}, 
   3.851264128929921*^9, {3.851264273134548*^9, 3.851264273840816*^9}, {
   3.8520544204379168`*^9, 3.8520544727483177`*^9}, 3.8520545094584513`*^9, {
   3.852054690541233*^9, 3.852054700610429*^9}, {3.852058742338978*^9, 
   3.852058743538294*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6d14bc35-bb58-435b-8266-e5fc0165bb47"],

Cell["The usual 3 minimal generators for BO. ", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.851264287892684*^9, 3.8512643491406384`*^9}, {
  3.85205348923427*^9, 
  3.8520534971571302`*^9}},ExpressionUUID->"b0d397b9-7a7a-4c5b-b2da-\
bb39d4f1166f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[Sqrt]", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{"QI", " ", "+", " ", "J"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
     "Q1", " ", "+", " ", "QI", " ", "+", " ", "J", " ", "+", " ", "K"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Sqrt]", "2"}]], 
     RowBox[{"(", 
      RowBox[{"Q1", "+", "QI"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToQ", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"-", "b"}], ",", 
       RowBox[{"-", "c"}], ",", 
       RowBox[{"-", "d"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", 
       RowBox[{"-", "d"}], ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "a", ",", 
       RowBox[{"-", "b"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       RowBox[{"-", "c"}], ",", "b", ",", "a"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.851264281568078*^9, {3.8520544827901154`*^9, 3.852054497812849*^9}, {
   3.8520546804986563`*^9, 3.8520546885015078`*^9}, {3.85205872508252*^9, 
   3.852058730066601*^9}, {3.852135287366416*^9, 3.8521353055300207`*^9}, {
   3.8521353409985247`*^9, 3.852135343150468*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"63966507-815f-4093-bd26-7ef8b15e5984"],

Cell["\<\
Boilerplate data wrangling to produce what is  a table we can query for types \
of relations we are interested in. Examples of usage below.\
\>", "Text",
 CellChangeTimes->{{3.8520844470449963`*^9, 
  3.852084565013153*^9}},ExpressionUUID->"b76c9e69-1287-420f-acff-\
9b6a3eb502cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stj", " ", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatrixPower", "[", 
             RowBox[{"S", ",", 
              RowBox[{"pwrs", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"MatrixPower", "[", 
             RowBox[{"T", ",", 
              RowBox[{"pwrs", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"MatrixPower", "[", 
             RowBox[{"J", ",", 
              RowBox[{"pwrs", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<STJ\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4", ",", "4"}], "}"}], "]"}], "//", 
          "Tuples"}]}], "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"R", ",", "pwr"}], "]"}]}], ",", 
         RowBox[{"\"\<R\>\"", "->", "pwr"}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", "4", "]"}]}], "}"}]}], "\n", "]"}], "//", 
     "Dataset"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"S", ",", "pwr"}], "]"}]}], ",", 
         RowBox[{"\"\<S\>\"", "->", "pwr"}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", "6", "]"}]}], "}"}]}], "\n", "]"}], "//", 
     "Dataset"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", "pwr"}], "]"}]}], ",", 
         RowBox[{"\"\<T\>\"", "->", "pwr"}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", "8", "]"}]}], "}"}]}], "\n", "]"}], "//", 
     "Dataset"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"QI", ",", "pwr"}], "]"}]}], ",", 
         RowBox[{"\"\<I\>\"", "->", "pwr"}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", "4", "]"}]}], "}"}]}], "\n", "]"}], "//", 
     "Dataset"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"j", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"J", ",", "pwr"}], "]"}]}], ",", 
         RowBox[{"\"\<J\>\"", "->", "pwr"}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", "4", "]"}]}], "}"}]}], "\n", "]"}], "//", 
     "Dataset"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"K", ",", "pwr"}], "]"}]}], ",", 
         RowBox[{"\"\<K\>\"", "->", "pwr"}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", "4", "]"}]}], "}"}]}], "\n", "]"}], "//", 
     "Dataset"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"st", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{
           RowBox[{"MatrixPower", "[", 
            RowBox[{"S", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{"T", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"\"\<ST\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}], "]"}], "//", "Tuples"}]}], 
        "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ts", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{
           RowBox[{"MatrixPower", "[", 
            RowBox[{"T", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{"S", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"\"\<TS\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "3"}], "}"}], "]"}], "//", "Tuples"}]}], 
        "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sj", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{
           RowBox[{"MatrixPower", "[", 
            RowBox[{"S", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{"J", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"\"\<SJ\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}], "]"}], "//", "Tuples"}]}], 
        "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"js", "=", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{
           RowBox[{"MatrixPower", "[", 
            RowBox[{"J", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{"S", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"\"\<JS\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "]"}], "//", "Tuples"}]}], 
        "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tj", " ", "=", " ", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{
           RowBox[{"MatrixPower", "[", 
            RowBox[{"T", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{"J", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"\"\<TJ\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], "]"}], "//", "Tuples"}]}], 
        "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jt", " ", "=", " ", 
    RowBox[{
     RowBox[{"Table", "[", "\n", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<El\>\"", "->", 
          RowBox[{
           RowBox[{"MatrixPower", "[", 
            RowBox[{"J", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{"T", ",", 
             RowBox[{"pwrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"\"\<JT\>\"", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
       RowBox[{"{", 
        RowBox[{"pwrs", ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}], "]"}], "//", "Tuples"}]}], 
        "}"}]}], "\n", "]"}], "//", "Dataset"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xs", "=", 
   RowBox[{"{", 
    RowBox[{
    "r", ",", "s", ",", "t", ",", "i", ",", "j", ",", "k", ",", "st", ",", 
     "ts", ",", "sj", ",", "js", ",", "tj", ",", "jt"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grpTb", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"acc", ",", "x"}], "}"}], "|->", 
      RowBox[{"JoinAcross", "[", 
       RowBox[{"acc", ",", "x", ",", "\"\<El\>\"", ",", "\"\<Left\>\""}], 
       "]"}]}], ",", " ", "stj", ",", "xs"}], "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.852054101496107*^9, 3.8520543685850773`*^9}, {
   3.852054398914735*^9, 3.852054409985661*^9}, {3.8520545267053347`*^9, 
   3.8520545276764936`*^9}, 3.8520545979626102`*^9, {3.8520571363519583`*^9, 
   3.852057142154587*^9}, {3.852057296163993*^9, 3.852057437282633*^9}, {
   3.852057487515922*^9, 3.852057497809408*^9}, {3.852058355015188*^9, 
   3.852058391631009*^9}, {3.852079956721744*^9, 3.852079968971902*^9}, {
   3.852080015561195*^9, 3.852080033899815*^9}, 3.852080106449254*^9, {
   3.852080145089377*^9, 3.852080219345269*^9}, {3.852080263265485*^9, 
   3.8520804145021544`*^9}, {3.852080891931447*^9, 3.8520809901186953`*^9}, {
   3.85208233137887*^9, 3.8520823339374332`*^9}, {3.8520827428851337`*^9, 
   3.852082743226404*^9}, {3.852085587140317*^9, 3.852085604834857*^9}, {
   3.8520859738999662`*^9, 3.852085979699588*^9}, {3.852125879916272*^9, 
   3.852125965934819*^9}, {3.852126079425933*^9, 3.852126081813622*^9}, {
   3.852126404464821*^9, 3.8521265091800747`*^9}, {3.852126548855639*^9, 
   3.852126565541556*^9}, {3.8521266375054626`*^9, 3.852126706891491*^9}, {
   3.852126759801502*^9, 3.852126776071775*^9}, {3.852126841256021*^9, 
   3.852126868357596*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7960c0d3-2cfc-44cc-aa88-8da9d4bc9e59"],

Cell["\<\
All elements of the group. Each row consists of columns of the different \
representations of an element. In particular, the matrix form, and then the \
ordered lists of products which can produce that element. Missing entries \
mean that the product corresponding to that column cannot produce the element \
that the row corresponds to.\
\>", "Text",
 CellChangeTimes->{{3.852084830637167*^9, 
  3.852084963981511*^9}},ExpressionUUID->"cf13a30b-74ce-45e3-83a1-\
a21d0da75abd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"grpTb", "[", 
   RowBox[{"All", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<STJ\>\"", ",", "\"\<S\>\"", ",", "\"\<T\>\"", ",", "\"\<J\>\"", 
      ",", "\"\<ST\>\"", ",", "\"\<TS\>\"", ",", "\"\<SJ\>\"", ",", 
      "\"\<JS\>\"", ",", "\"\<TJ\>\"", ",", "\"\<JT\>\""}], "}"}]}], "]"}], 
  "[", 
  RowBox[{"SortBy", "[", "\"\<JT\>\"", "]"}], "]"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwdzk0ogwEcx/FligMZW7IwhOQ1bLEi2tLm4KAljayW8hLF5K28bzaF2Lw8
2kHKW6QReQ/zcrEijWJyUIjEiNqBg/L8/odvn+s3qrxeVeHF4XBEbFC8lXGQ
t+6WTe20nMKXmAaPfsMtew/18TWwNm1EiOHn7Fkm1Ls1SvjIDJG+gvZCmMgk
FMH0h9Ea+O1ZJCe0pe1QGpzZCQ3+omHIG4sjVZMqBjZaysmy/Zj9Xtaw+SNS
zkQfQ9t19wmsnDu8h9nWW/I3q9YDhY41Uv5axTWyWkc0PlDKN/Hg+ccCmZoi
DYFpm2ohDAosUcN3XR1ZbffrgJaAeFLR1dMPD3SKAah0ycyw1SufdMxGrkLn
ci7JjTVfQbt8hpRwL2/giv2OdF3wg/pYjY43ART9JH0tsfKfcsjbaV2yjTW2
gCFHTX/bu6wVKmYHPg867dB7vO8QGrWC5j18ijPIQUl4G7yQFJP/DuQE9w==

  "],
 CellLabel->
  "In[171]:=",ExpressionUUID->"ee9d0576-a00a-4940-a8f7-f430e928a5ab"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "STJ" -> {3, 3, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> {1, 1}|>, <|
       "STJ" -> {3, 2, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> {1, 2}|>, <|
       "STJ" -> {3, 1, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> {1, 3}|>, <|
       "STJ" -> {3, 4, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> 3, "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> {3, 1}, "JS" -> {1, 3}, "TJ" -> {4, 1}, 
        "JT" -> {1, 4}|>, <|
       "STJ" -> {3, 1, 4}, "S" -> Missing["Unmatched"], "T" -> 5, "J" -> 
        Missing["Unmatched"], "ST" -> {3, 1}, "TS" -> {1, 3}, "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {1, 2}, 
        "JT" -> {2, 1}|>, <|
       "STJ" -> {3, 2, 4}, "S" -> Missing["Unmatched"], "T" -> 6, "J" -> 
        Missing["Unmatched"], "ST" -> {3, 2}, "TS" -> {2, 3}, "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {2, 2}, 
        "JT" -> {2, 2}|>, <|
       "STJ" -> {3, 3, 4}, "S" -> Missing["Unmatched"], "T" -> 7, "J" -> 
        Missing["Unmatched"], "ST" -> {3, 3}, "TS" -> {3, 3}, "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {3, 2}, 
        "JT" -> {2, 3}|>, <|
       "STJ" -> {3, 4, 4}, "S" -> 6, "T" -> 8, "J" -> 4, "ST" -> {3, 4}, 
        "TS" -> {4, 3}, "SJ" -> {3, 2}, "JS" -> {2, 3}, "TJ" -> {4, 2}, 
        "JT" -> {2, 4}|>, <|
       "STJ" -> {1, 1, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {1, 2}, "SJ" -> Missing["Unmatched"], 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 1, 2}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {3, 2}, "SJ" -> Missing["Unmatched"], 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 1, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 1, 4}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> {1, 1}, 
        "TS" -> Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 2, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {2, 1}, "SJ" -> Missing["Unmatched"], 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 2, 2}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 2, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 2, 4}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> {1, 2}, 
        "TS" -> Missing["Unmatched"], "SJ" -> Missing["Unmatched"], 
        "JS" -> {1, 1}, "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 3, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 3, 2}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 3, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 3, 4}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> {1, 3}, 
        "TS" -> Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 4, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 4, 2}, "S" -> 1, "T" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 4, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> {1, 1}, 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {1, 4, 4}, "S" -> 4, "T" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "ST" -> {1, 4}, "TS" -> {4, 1}, "SJ" -> {1, 2}, 
        "JS" -> {2, 1}, "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 1, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {3, 1}, "SJ" -> Missing["Unmatched"], 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 1, 2}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 1, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 1, 4}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> {2, 1}, 
        "TS" -> Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 2, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> {1, 2}, "TJ" -> Missing["Unmatched"], 
        "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 2, 2}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 2, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 2, 4}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> {2, 2}, 
        "TS" -> Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 3, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 3, 2}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {1, 1}, "SJ" -> Missing["Unmatched"], 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 3, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 3, 4}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> {2, 3}, 
        "TS" -> Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 2}, "S" -> 2, "T" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {2, 2}, "SJ" -> {2, 1}, "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 4}, "S" -> 5, "T" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "ST" -> {2, 4}, "TS" -> {4, 2}, "SJ" -> {2, 2}, 
        "JS" -> {2, 2}, "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {3, 1, 2}, "S" -> Missing["Unmatched"], "T" -> 1, "J" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {3, 1, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {1, 1}, 
        "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 2, 2}, "S" -> Missing["Unmatched"], "T" -> 2, "J" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {3, 2, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {2, 1}, 
        "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 3, 2}, "S" -> Missing["Unmatched"], "T" -> 3, "J" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {3, 3, 3}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {3, 1}, 
        "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 4, 1}, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "J" -> 1, "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {3, 4, 2}, "S" -> 3, "T" -> 4, "J" -> 2, "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "S"} -> 
        1, {All, "T"} -> 1, {All, "J"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 
        1, {All, "SJ"} -> 1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "S", "T", "J", "ST", "TS", "SJ", "JS", "TJ", "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 48], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "S"} -> 
        1, {All, "T"} -> 1, {All, "J"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 
        1, {All, "SJ"} -> 1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 10, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "S", "T", "J", "ST", "TS", "SJ", "JS", "TJ", "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 48], "Path" -> {}, 
     "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     48, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S", 
                  Style[
                  "S", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "S"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "S"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T", 
                  Style[
                  "T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "T"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["J", 
                  Style[
                  "J", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "J"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "J"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ST", 
                  Style[
                  "ST", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ST"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ST"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SJ", 
                  Style[
                  "SJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JS", 
                  Style[
                  "JS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TJ", 
                  Style[
                  "TJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JT", 
                  Style[
                  "JT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-12) 
                    If[True, 48, 1], {1, 48 - -12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-12) 
                    If[False, 48, 1], {1, 48 - -12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 12, " of ", 
                    Style[48, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 12, " of ", 
                    Style[48, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    12 If[False, 48, 1], {1, 48 - 12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    12 If[True, 48, 1], {1, 48 - 12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{569., {157.515625, 161.484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{569., {157.515625, 161.484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8527392684319067`*^9, 3.852739553995685*^9, {3.852739660951537*^9, 
   3.8527396665688143`*^9}, 3.852739706740841*^9, 3.852739970598282*^9, 
   3.852740245395307*^9, 3.852740279310252*^9, {3.852742801150894*^9, 
   3.85274282370676*^9}, 3.852818306624325*^9, 3.852820845210169*^9, 
   3.8528485811643677`*^9, {3.852848631454619*^9, 3.852848636647542*^9}, 
   3.8528521381700363`*^9, 3.8528521792218313`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"b9f7e088-67f6-4296-922d-ca47807a768d"]
}, Open  ]],

Cell["S^3 = -1 , T^4 = -1, J^2 = -1", "Text",
 CellChangeTimes->{{3.852738942107744*^9, 
  3.8527389614802732`*^9}},ExpressionUUID->"ec5d2943-b785-485d-b367-\
4676d79f2aaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"48", "^", "2"}]], "Code",
 CellChangeTimes->{{3.852740527530712*^9, 3.852740529693552*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d99605c7-4117-438d-8830-f42283db9885"],

Cell[BoxData["2304"], "Output",
 CellChangeTimes->{{3.852734411062419*^9, 3.85273452861131*^9}, {
   3.852734896932336*^9, 3.8527349108026342`*^9}, 3.8527350367573147`*^9, 
   3.852735137901071*^9, 3.852735317697727*^9, {3.852735453186311*^9, 
   3.8527354661123657`*^9}, 3.852735601728469*^9, 3.8527356594607277`*^9, {
   3.852738025171*^9, 3.85273802555017*^9}, {3.852738060332436*^9, 
   3.852738068324807*^9}, 3.8527382951936903`*^9, 3.852738470242909*^9, {
   3.852738591133999*^9, 3.852738619263308*^9}, 3.852738693793889*^9, {
   3.8527387573021097`*^9, 3.852738763212789*^9}, 3.852740530656991*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"cf0852cb-4704-4fa7-ae70-702e21fa77ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T", ".", "T", ".", "T", ".", "J", ".", "J", ".", "J"}], "-", 
  RowBox[{"J", ".", "T"}]}]], "Input",
 CellChangeTimes->{{3.852739228069194*^9, 3.852739235199539*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"0a76e315-932a-47a1-8b7a-7bc62ccfc284"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.852739235468565*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"94ceaecb-c572-411a-a792-173078faac4b"]
}, Open  ]],

Cell[TextData[{
 "All of those elements generated by ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"<", 
         StyleBox["S", "TI"], ">", "<", 
         StyleBox["T", "TI"], ">", "<", 
         StyleBox["J", "TI"], ">"}], TraditionalForm], "errors" -> {}, 
     "input" -> "<S><T><J>", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7f3d1dea-e26d-441b-b5e2-79884d1a7276"],
 " which coincide with those generated by ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"<", 
         StyleBox["T", "TI"], ">", "<", 
         StyleBox["S", "TI"], ">"}], TraditionalForm], "errors" -> {}, 
     "input" -> "<T><S>", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "500ca932-8241-418c-a2b2-2a87338aeb41"],
 "; sans those elements the latter cannot produce."
}], "Text",
 CellChangeTimes->{{3.852084577349401*^9, 3.852084672980908*^9}, {
  3.8520848213336906`*^9, 3.8520848228532867`*^9}, {3.852085026069817*^9, 
  3.852085040669467*^9}},ExpressionUUID->"a9ec4188-2f64-48a4-beaa-\
b44d4274d2cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"grpTb", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#El", "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{"S", ",", "2"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"S", ",", "1"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"T", ",", "1"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"J", ",", "1"}], "]"}]}], ")"}]}], "&"}], "]"}], "]"}], "[", 
  
  RowBox[{"All", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<STJ\>\"", ",", "\"\<TS\>\""}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grpTb", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#El", "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{"T", ",", "0"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"S", ",", "1"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"T", ",", "1"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"J", ",", "1"}], "]"}]}], ")"}]}], "&"}], "]"}], "]"}], "[", 
  
  RowBox[{"All", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<STJ\>\"", ",", "\"\<TS\>\""}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grpTb", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<STJ\>\"", ",", "\"\<TS\>\""}], "}"}]}], "]"}], "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Not", "@", 
      RowBox[{"MissingQ", "[", "#TS", "]"}]}], "&"}], "]"}], "]"}], "[", 
  RowBox[{"SortBy", "[", "\"\<TS\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", ".", "T"}], "-", 
  RowBox[{"T", ".", "S", ".", "S", ".", "J", ".", "J", ".", "J"}]}]}], "Input",\

 CellChangeTimes->CompressedData["
1:eJwdyzlIggEAxXE73Iwoty6oICwkHKQhKrCMjiHIpjCzjMhC+BxaBK3UMAuV
higMcyqXliKxO4SCsBIkwwNEQcUyTYIuxbC+9w2P3/D410sIwXQxjUarJQc/
WfrbnqM072Q34oFWbjQEx33PYbhTXheDklHrC5Q3it9g4I6TgcTAfR5KOTI6
H121VgWJqVUtrMpP6KF3Q0eZ7c8aIePyeJP6DytTkLVt+YA23/IP5Au7cjAu
ChegVFH0B0ucQb7SnuadeoW9cMiyNQQTphSloLyggLJEpwrG+9bU0BTKaOAD
QTtfJH03dlAyYt5HeJCs8MJId9SxRNpe5DiDM81fV1AXtLnhYJPbB0vNDX7Y
kWNHoDwcpZzjtjDVpAbLBaWzdZAF9TUpNjS9modhGeEagVbmvgZu+icNcL1f
uQfnkwuUK+Lfa2hn0G9g25PeDb95XA98GZv1Qde6KAD/AfoHBe0=
  "],
 CellLabel->
  "In[126]:=",ExpressionUUID->"1cd4078b-d962-486d-b89c-742168c886ed"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"STJ" -> {3, 1, 1}, "TS" -> Missing["Unmatched"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "TS"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "TS"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], TypeSystem`UnknownType}], 1], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "TS"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "TS"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], TypeSystem`UnknownType}], 1], 
     "Path" -> {}, "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 2, 
     "DataRowCount" -> 1, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{105., {28.015625, 31.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{105., {28.015625, 31.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.852731986123076*^9, 3.852732013742867*^9}, 
   3.852732091476882*^9, 3.852732574826475*^9, 3.852732738735343*^9, {
   3.852733069793817*^9, 3.852733086765276*^9}, {3.852733497326438*^9, 
   3.852733539482107*^9}, 3.852733741155443*^9, 3.852733984463312*^9, {
   3.852734066049149*^9, 3.85273408207323*^9}, {3.852734138397193*^9, 
   3.8527341472976522`*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"184fadd7-6641-4206-be66-5485d3cc695e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"STJ" -> {1, 1, 1}, "TS" -> {1, 2}|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[31.5], 
           TypeSystem`PackageScope`UnknownShape[False]]], 13, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration["STJ", "TS"]], 
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], 1], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[31.5], 
           TypeSystem`PackageScope`UnknownShape[False]]], 13, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration["STJ", "TS"]], 
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], 1], 
     "Path" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["TS"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{77., {28.015625, 31.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{77., {28.015625, 31.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.852731986123076*^9, 3.852732013742867*^9}, 
   3.852732091476882*^9, 3.852732574826475*^9, 3.852732738735343*^9, {
   3.852733069793817*^9, 3.852733086765276*^9}, {3.852733497326438*^9, 
   3.852733539482107*^9}, 3.852733741155443*^9, 3.852733984463312*^9, {
   3.852734066049149*^9, 3.85273408207323*^9}, {3.852734138397193*^9, 
   3.852734147388064*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"93ea8e09-37af-49ba-a6c9-346cd8475f43"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"STJ" -> {2, 3, 2}, "TS" -> {1, 1}|>, <|
       "STJ" -> {1, 1, 1}, "TS" -> {1, 2}|>, <|
       "STJ" -> {3, 1, 4}, "TS" -> {1, 3}|>, <|
       "STJ" -> {1, 2, 1}, "TS" -> {2, 1}|>, <|
       "STJ" -> {2, 4, 3}, "TS" -> {2, 2}|>, <|
       "STJ" -> {3, 2, 4}, "TS" -> {2, 3}|>, <|
       "STJ" -> {2, 1, 1}, "TS" -> {3, 1}|>, <|
       "STJ" -> {1, 1, 2}, "TS" -> {3, 2}|>, <|
       "STJ" -> {3, 3, 4}, "TS" -> {3, 3}|>, <|
       "STJ" -> {1, 4, 4}, "TS" -> {4, 1}|>, <|
       "STJ" -> {2, 4, 4}, "TS" -> {4, 2}|>, <|
       "STJ" -> {3, 4, 4}, "TS" -> {4, 3}|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "TS"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "TS"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 12], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "TS"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "TS"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 12], "Path" -> {}, 
     "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     12, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{66., {149.015625, 152.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{66., {149.015625, 152.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.852731986123076*^9, 3.852732013742867*^9}, 
   3.852732091476882*^9, 3.852732574826475*^9, 3.852732738735343*^9, {
   3.852733069793817*^9, 3.852733086765276*^9}, {3.852733497326438*^9, 
   3.852733539482107*^9}, 3.852733741155443*^9, 3.852733984463312*^9, {
   3.852734066049149*^9, 3.85273408207323*^9}, {3.852734138397193*^9, 
   3.852734147427198*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"379b9e8d-75ef-44c5-a74c-34d62b6856a7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.852731986123076*^9, 3.852732013742867*^9}, 
   3.852732091476882*^9, 3.852732574826475*^9, 3.852732738735343*^9, {
   3.852733069793817*^9, 3.852733086765276*^9}, {3.852733497326438*^9, 
   3.852733539482107*^9}, 3.852733741155443*^9, 3.852733984463312*^9, {
   3.852734066049149*^9, 3.85273408207323*^9}, {3.852734138397193*^9, 
   3.8527341474971437`*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"e5b0ec44-9755-4d32-b5ee-735ae34100ff"]
}, Open  ]],

Cell[TextData[{
 "Find all other ways element ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["S", "TI"], "3"], 
         SuperscriptBox[
          StyleBox["T", "TI"], "1"], 
         SuperscriptBox[
          StyleBox["J", "TI"], "4"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "S^3 T^1 J^4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fc8058b6-f52e-4b31-a418-11d0258bf666"],
 "can be written (in terms of products we track)."
}], "Text",
 CellChangeTimes->{{3.8520854214378023`*^9, 3.852085426356473*^9}, {
  3.852085463125689*^9, 
  3.85208552929379*^9}},ExpressionUUID->"860f62ad-b605-4044-b17e-\
ca8c7d7cb6f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"grpTb", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#STJ", " ", "===", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1", ",", "4"}], "}"}]}], "&"}], "]"}], "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Not", "@", 
        RowBox[{"MissingQ", "[", "#", "]"}]}], "&"}], "]"}]}], "]"}], "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<El\>\"", "->", "MatrixForm"}], "}"}]}], "]"}], "[", 
  "Normal", "]"}]], "Input",
 CellChangeTimes->{{3.852085243573166*^9, 3.852085336984417*^9}, {
  3.852085371935925*^9, 3.85208545694875*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"8e4ba770-2645-4924-95a7-5fbed674976b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{
       "El" -> MatrixForm[{{-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 
            0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
           0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
           0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}], 
        "STJ" -> {3, 1, 4}, "T" -> 5, "ST" -> {3, 1}, "TS" -> {1, 3}, 
        "TJ" -> {1, 2}, "JT" -> {2, 1}}}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[1, 7], 1, 14, {All}], 
     "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 7], 1], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[1, 7], 1, 14, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 7], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 14, "DataRowCount" -> 
     1, "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"El\"", "\[Rule]", 
                   TagBox[
                    RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox["2"]]}], 
                    FractionBox["1", 
                    SqrtBox["2"]], "0", "0"}, {
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox["2"]]}], 
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox["2"]]}], "0", "0"}, {"0", "0", 
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox["2"]]}], 
                    FractionBox["1", 
                    SqrtBox["2"]]}, {"0", "0", 
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox["2"]]}], 
                    RowBox[{"-", 
                    FractionBox["1", 
                    SqrtBox["2"]]}]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center], 
                    "\[NoBreak]", ")"}], 
                    Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"STJ\"", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "4"}], "}"}]}], FontFamily -> 
                 Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"T\"", "\[Rule]", "5"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"ST\"", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"TS\"", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"TJ\"", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\"JT\"", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{651., {52.015625, 55.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{651., {52.015625, 55.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8520852804963207`*^9, 3.852085337490684*^9}, {
   3.852085399310568*^9, 3.852085409616699*^9}, {3.852085444722456*^9, 
   3.852085457296689*^9}, 3.852085632104554*^9, 3.852125986506217*^9, 
   3.852126035553845*^9, 3.8521261087101183`*^9, 3.8521268905844183`*^9, 
   3.852127862825485*^9, 3.852128470227941*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"919e7ed0-8f61-44ff-8181-c350a8dc8171"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"grpTb", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Not", "@", 
       RowBox[{"MissingQ", "[", "#TS", "]"}]}], "&"}], "]"}], "]"}], "[", 
   RowBox[{"SortBy", "[", "\"\<TS\>\"", "]"}], "]"}], "[", 
  RowBox[{"KeyDrop", "[", "\"\<El\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.852127300989367*^9, 3.8521274017793016`*^9}, {
   3.85212750198205*^9, 3.852127502235468*^9}, {3.852127648212707*^9, 
   3.852127656147395*^9}, {3.852128500925159*^9, 3.852128530291144*^9}, 
   3.852128568885975*^9, 3.852131473470756*^9, {3.85281818711232*^9, 
   3.85281819383055*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"51b4bd50-4ef0-44a8-9bc6-be07c4a62a0f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "STJ" -> {2, 3, 2}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> {1, 1}, 
        "SJ" -> Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 1, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> {1, 2}, 
        "SJ" -> Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 1, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> 5, "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {3, 1}, 
        "TS" -> {1, 3}, "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> {1, 2}, "JT" -> {2, 1}|>, <|
       "STJ" -> {1, 2, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> {2, 1}, 
        "SJ" -> Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 3}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> {2, 2}, 
        "SJ" -> {2, 1}, "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 2, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> 6, "I" -> 3, "J" -> Missing["Unmatched"],
         "K" -> Missing["Unmatched"], "ST" -> {3, 2}, "TS" -> {2, 3}, "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {2, 2}, 
        "JT" -> {2, 2}|>, <|
       "STJ" -> {2, 1, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> {3, 1}, 
        "SJ" -> Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {1, 1, 2}, "R" -> 3, "S" -> Missing["Unmatched"], "T" -> 
        Missing["Unmatched"], "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> {3, 2}, "SJ" -> Missing["Unmatched"], 
        "JS" -> Missing["Unmatched"], "TJ" -> Missing["Unmatched"], "JT" -> 
        Missing["Unmatched"]|>, <|
       "STJ" -> {3, 3, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> 7, "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {3, 3}, 
        "TS" -> {3, 3}, "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> {3, 2}, "JT" -> {2, 3}|>, <|
       "STJ" -> {1, 4, 4}, "R" -> Missing["Unmatched"], "S" -> 4, "T" -> 
        Missing["Unmatched"], "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {1, 4}, 
        "TS" -> {4, 1}, "SJ" -> {1, 2}, "JS" -> {2, 1}, "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 4}, "R" -> Missing["Unmatched"], "S" -> 5, "T" -> 
        Missing["Unmatched"], "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {2, 4}, 
        "TS" -> {4, 2}, "SJ" -> {2, 2}, "JS" -> {2, 2}, "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 4, 4}, "R" -> 4, "S" -> 6, "T" -> 8, "I" -> 4, "J" -> 4, 
        "K" -> 4, "ST" -> {3, 4}, "TS" -> {4, 3}, "SJ" -> {3, 2}, 
        "JS" -> {2, 3}, "TJ" -> {4, 2}, "JT" -> {2, 4}|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "R"} -> 
        1, {All, "S"} -> 1, {All, "T"} -> 1, {All, "I"} -> 1, {All, "J"} -> 
        1, {All, "K"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 1, {All, "SJ"} -> 
        1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "R" -> 
            TypeSystem`PackageScope`AtomShape[34], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "I" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "K" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 13, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "R", "S", "T", "I", "J", "K", "ST", "TS", "SJ", "JS", "TJ", 
         "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 12], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "R"} -> 
        1, {All, "S"} -> 1, {All, "T"} -> 1, {All, "I"} -> 1, {All, "J"} -> 
        1, {All, "K"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 1, {All, "SJ"} -> 
        1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "R" -> 
            TypeSystem`PackageScope`AtomShape[34], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "I" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "K" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 13, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "R", "S", "T", "I", "J", "K", "ST", "TS", "SJ", "JS", "TJ", 
         "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 12], "Path" -> {}, 
     "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 13, "DataRowCount" -> 
     12, "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R", 
                  Style[
                  "R", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "R"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "R"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S", 
                  Style[
                  "S", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "S"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "S"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T", 
                  Style[
                  "T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "T"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["I", 
                  Style[
                  "I", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "I"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "I"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["J", 
                  Style[
                  "J", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "J"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "J"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["K", 
                  Style[
                  "K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "K"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ST", 
                  Style[
                  "ST", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ST"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ST"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SJ", 
                  Style[
                  "SJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JS", 
                  Style[
                  "JS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TJ", 
                  Style[
                  "TJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JT", 
                  Style[
                  "JT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{636., {149.015625, 152.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{636., {149.015625, 152.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8521285172242727`*^9, 3.852128531197447*^9}, 
   3.852128569500259*^9, 3.852131474051855*^9, 3.8528181947656603`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"1fb9a3e3-7939-40d3-86ef-9565eab399dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"grpTb", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Not", "@", 
       RowBox[{"MissingQ", "[", "#JT", "]"}]}], "&"}], "]"}], "]"}], "[", 
   RowBox[{"SortBy", "[", "\"\<JT\>\"", "]"}], "]"}], "[", 
  RowBox[{"KeyDrop", "[", "\"\<El\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.852127076147746*^9, 3.8521271259072733`*^9}, {
  3.8521271609321747`*^9, 3.8521272014432907`*^9}, {3.852128602700944*^9, 
  3.852128617932187*^9}, {3.8521314799907312`*^9, 3.852131480437809*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"e13694d0-a0da-4a49-9186-0d4bb4a81ef0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "STJ" -> {3, 3, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], 
        "JT" -> {1, 1}|>, <|
       "STJ" -> {3, 2, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 3, "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> 
        Missing["Unmatched"], "JT" -> {1, 2}|>, <|
       "STJ" -> {3, 1, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> Missing["Unmatched"], 
        "JT" -> {1, 3}|>, <|
       "STJ" -> {3, 4, 3}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> 3, "K" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> {3, 1}, 
        "JS" -> {1, 3}, "TJ" -> {4, 1}, "JT" -> {1, 4}|>, <|
       "STJ" -> {3, 1, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> 5, "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {3, 1}, 
        "TS" -> {1, 3}, "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> {1, 2}, "JT" -> {2, 1}|>, <|
       "STJ" -> {3, 2, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> 6, "I" -> 3, "J" -> Missing["Unmatched"],
         "K" -> Missing["Unmatched"], "ST" -> {3, 2}, "TS" -> {2, 3}, "SJ" -> 
        Missing["Unmatched"], "JS" -> Missing["Unmatched"], "TJ" -> {2, 2}, 
        "JT" -> {2, 2}|>, <|
       "STJ" -> {3, 3, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> 7, "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {3, 3}, 
        "TS" -> {3, 3}, "SJ" -> Missing["Unmatched"], "JS" -> 
        Missing["Unmatched"], "TJ" -> {3, 2}, "JT" -> {2, 3}|>, <|
       "STJ" -> {3, 4, 4}, "R" -> 4, "S" -> 6, "T" -> 8, "I" -> 4, "J" -> 4, 
        "K" -> 4, "ST" -> {3, 4}, "TS" -> {4, 3}, "SJ" -> {3, 2}, 
        "JS" -> {2, 3}, "TJ" -> {4, 2}, "JT" -> {2, 4}|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "R"} -> 
        1, {All, "S"} -> 1, {All, "T"} -> 1, {All, "I"} -> 1, {All, "J"} -> 
        1, {All, "K"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 1, {All, "SJ"} -> 
        1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "R" -> 
            TypeSystem`PackageScope`AtomShape[34], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "I" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "K" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 13, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "R", "S", "T", "I", "J", "K", "ST", "TS", "SJ", "JS", "TJ", 
         "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], TypeSystem`AnyType, 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 8], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "R"} -> 
        1, {All, "S"} -> 1, {All, "T"} -> 1, {All, "I"} -> 1, {All, "J"} -> 
        1, {All, "K"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 1, {All, "SJ"} -> 
        1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "R" -> 
            TypeSystem`PackageScope`AtomShape[34], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "I" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "K" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 13, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "R", "S", "T", "I", "J", "K", "ST", "TS", "SJ", "JS", "TJ", 
         "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], TypeSystem`AnyType, 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 8], "Path" -> {}, 
     "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 13, "DataRowCount" -> 
     8, "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R", 
                  Style[
                  "R", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "R"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "R"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S", 
                  Style[
                  "S", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "S"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "S"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T", 
                  Style[
                  "T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "T"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["I", 
                  Style[
                  "I", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "I"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "I"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["J", 
                  Style[
                  "J", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "J"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "J"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["K", 
                  Style[
                  "K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "K"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ST", 
                  Style[
                  "ST", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ST"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ST"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SJ", 
                  Style[
                  "SJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JS", 
                  Style[
                  "JS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TJ", 
                  Style[
                  "TJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JT", 
                  Style[
                  "JT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{636., {105.015625, 108.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{636., {105.015625, 108.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8521270923160677`*^9, 3.852127126516766*^9}, {
   3.852127174482699*^9, 3.852127202531454*^9}, 3.852127863565439*^9, 
   3.8521286208785458`*^9, 3.852131480903956*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"f56cf5db-11a1-4131-bf71-f2fa13eb5f11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"grpTb", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Not", "@", 
       RowBox[{"MissingQ", "[", "#JS", "]"}]}], "&"}], "]"}], "]"}], "[", 
   RowBox[{"SortBy", "[", "\"\<JS\>\"", "]"}], "]"}], "[", 
  RowBox[{"KeyDrop", "[", "\"\<El\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.852127215172105*^9, 3.852127226171308*^9}, {
  3.852128625146226*^9, 3.852128629420485*^9}, {3.852131485470643*^9, 
  3.852131485933535*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"ee574540-1f6d-4ef5-a624-78b3811ddd29"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "STJ" -> {1, 2, 4}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> {1, 2}, "TS" -> Missing["Unmatched"], 
        "SJ" -> Missing["Unmatched"], "JS" -> {1, 1}, "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 2, 1}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> Missing["Unmatched"], "K" -> 
        Missing["Unmatched"], "ST" -> Missing["Unmatched"], "TS" -> 
        Missing["Unmatched"], "SJ" -> Missing["Unmatched"], "JS" -> {1, 2}, 
        "TJ" -> Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 4, 3}, "R" -> Missing["Unmatched"], "S" -> 
        Missing["Unmatched"], "T" -> Missing["Unmatched"], "I" -> 
        Missing["Unmatched"], "J" -> 3, "K" -> Missing["Unmatched"], "ST" -> 
        Missing["Unmatched"], "TS" -> Missing["Unmatched"], "SJ" -> {3, 1}, 
        "JS" -> {1, 3}, "TJ" -> {4, 1}, "JT" -> {1, 4}|>, <|
       "STJ" -> {1, 4, 4}, "R" -> Missing["Unmatched"], "S" -> 4, "T" -> 
        Missing["Unmatched"], "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {1, 4}, 
        "TS" -> {4, 1}, "SJ" -> {1, 2}, "JS" -> {2, 1}, "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {2, 4, 4}, "R" -> Missing["Unmatched"], "S" -> 5, "T" -> 
        Missing["Unmatched"], "I" -> Missing["Unmatched"], "J" -> 
        Missing["Unmatched"], "K" -> Missing["Unmatched"], "ST" -> {2, 4}, 
        "TS" -> {4, 2}, "SJ" -> {2, 2}, "JS" -> {2, 2}, "TJ" -> 
        Missing["Unmatched"], "JT" -> Missing["Unmatched"]|>, <|
       "STJ" -> {3, 4, 4}, "R" -> 4, "S" -> 6, "T" -> 8, "I" -> 4, "J" -> 4, 
        "K" -> 4, "ST" -> {3, 4}, "TS" -> {4, 3}, "SJ" -> {3, 2}, 
        "JS" -> {2, 3}, "TJ" -> {4, 2}, "JT" -> {2, 4}|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "R"} -> 
        1, {All, "S"} -> 1, {All, "T"} -> 1, {All, "I"} -> 1, {All, "J"} -> 
        1, {All, "K"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 1, {All, "SJ"} -> 
        1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "R" -> 
            TypeSystem`PackageScope`AtomShape[34], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "I" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "K" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 13, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "R", "S", "T", "I", "J", "K", "ST", "TS", "SJ", "JS", "TJ", 
         "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 6], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "R"} -> 
        1, {All, "S"} -> 1, {All, "T"} -> 1, {All, "I"} -> 1, {All, "J"} -> 
        1, {All, "K"} -> 1, {All, "ST"} -> 1, {All, "TS"} -> 1, {All, "SJ"} -> 
        1, {All, "JS"} -> 1, {All, "TJ"} -> 1, {All, "JT"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "R" -> 
            TypeSystem`PackageScope`AtomShape[34], "S" -> 
            TypeSystem`PackageScope`AtomShape[34], "T" -> 
            TypeSystem`PackageScope`AtomShape[34], "I" -> 
            TypeSystem`PackageScope`AtomShape[34], "J" -> 
            TypeSystem`PackageScope`AtomShape[34], "K" -> 
            TypeSystem`PackageScope`AtomShape[34], "ST" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "SJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JS" -> 
            TypeSystem`PackageScope`UnknownShape[False], "TJ" -> 
            TypeSystem`PackageScope`UnknownShape[False], "JT" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 13, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "STJ", "R", "S", "T", "I", "J", "K", "ST", "TS", "SJ", "JS", "TJ", 
         "JT"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2]}], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 13, "DataRowCount" -> 
     6, "DataColumnCount" -> 13, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R", 
                  Style[
                  "R", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "R"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "R"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["S", 
                  Style[
                  "S", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "S"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "S"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["T", 
                  Style[
                  "T", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "T"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "T"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["I", 
                  Style[
                  "I", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "I"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "I"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["J", 
                  Style[
                  "J", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "J"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "J"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["K", 
                  Style[
                  "K", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "K"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "K"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ST", 
                  Style[
                  "ST", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ST"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ST"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS", 
                  Style[
                  "TS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SJ", 
                  Style[
                  "SJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JS", 
                  Style[
                  "JS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TJ", 
                  Style[
                  "TJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["JT", 
                  Style[
                  "JT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "JT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "JT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["R"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["S"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["T"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["I"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["J"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["K"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["ST"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ST"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["SJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["JS"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JS"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["TJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["JT"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["JT"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{636., {83.015625, 86.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{636., {83.015625, 86.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.852127226569874*^9, 3.852127863750576*^9, 
  3.8521286298054733`*^9, 3.852131486681381*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"905df66e-24c0-47b7-8c33-fa40c443e237"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stjstj", " ", "=", 
   RowBox[{
    RowBox[{"Table", "[", "\n", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<El\>\"", "->", 
         RowBox[{
          RowBox[{"MatrixPower", "[", 
           RowBox[{"S", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"J", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"S", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"J", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<STJSTJ\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"pwrs", ",", " ", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"{", 
           RowBox[{"3", ",", "4", ",", "4", ",", "3", ",", "4", ",", "4"}], 
           "}"}], "]"}], "//", "Tuples"}]}], "}"}]}], "\n", "]"}], "//", 
    "Dataset"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.852129686733446*^9, 3.8521298440708113`*^9}, {
  3.8521298933418293`*^9, 3.852129930525201*^9}, {3.852129990159134*^9, 
  3.8521300031727333`*^9}, {3.852130040868887*^9, 3.852130064796742*^9}, {
  3.8521301084208393`*^9, 3.85213018205332*^9}, {3.8521302593117533`*^9, 
  3.852130274596826*^9}, {3.852130313558679*^9, 3.8521304045169764`*^9}, {
  3.852130460649556*^9, 3.852130714064329*^9}, {3.852130759054653*^9, 
  3.852130777623468*^9}, {3.852130843072105*^9, 3.852130870206419*^9}, {
  3.852130907790947*^9, 3.852130912221471*^9}, {3.8521311544327374`*^9, 
  3.852131155039052*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"c51eca23-d00f-4e0a-a53f-4d50d19455bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"JoinAcross", "[", 
       RowBox[{
       "stj", ",", "stjstj", ",", "\"\<El\>\"", ",", "\"\<Inner\>\""}], "]"}],
       "[", 
      RowBox[{"KeyDrop", "[", "\"\<El\>\"", "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<STJ\>\"", "]"}], "]"}], "[", 
    RowBox[{"All", ",", "1"}], "]"}], "[", "Values", "]"}], "[", 
  RowBox[{"SortBy", "[", "\"\<STJSTJ\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.852131382775277*^9, 3.8521313834453382`*^9}, 
   3.852135887072941*^9, {3.852135983212463*^9, 3.852135993526402*^9}, {
   3.852824263491859*^9, 3.852824263811804*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"8c26c779-4483-4785-b77c-709c439cb781"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "STJ" -> {3, 2, 1}, "STJSTJ" -> {1, 1, 1, 1, 1, 1}|>, <|
       "STJ" -> {3, 2, 2}, "STJSTJ" -> {1, 1, 1, 1, 1, 2}|>, <|
       "STJ" -> {3, 2, 3}, "STJSTJ" -> {1, 1, 1, 1, 1, 3}|>, <|
       "STJ" -> {3, 2, 4}, "STJSTJ" -> {1, 1, 1, 1, 1, 4}|>, <|
       "STJ" -> {3, 3, 1}, "STJSTJ" -> {1, 1, 1, 1, 2, 1}|>, <|
       "STJ" -> {3, 3, 2}, "STJSTJ" -> {1, 1, 1, 1, 2, 2}|>, <|
       "STJ" -> {3, 3, 3}, "STJSTJ" -> {1, 1, 1, 1, 2, 3}|>, <|
       "STJ" -> {3, 3, 4}, "STJSTJ" -> {1, 1, 1, 1, 2, 4}|>, <|
       "STJ" -> {3, 4, 1}, "STJSTJ" -> {1, 1, 1, 1, 3, 1}|>, <|
       "STJ" -> {3, 4, 2}, "STJSTJ" -> {1, 1, 1, 1, 3, 2}|>, <|
       "STJ" -> {3, 4, 3}, "STJSTJ" -> {1, 1, 1, 1, 3, 3}|>, <|
       "STJ" -> {3, 4, 4}, "STJSTJ" -> {1, 1, 1, 1, 3, 4}|>, <|
       "STJ" -> {3, 1, 3}, "STJSTJ" -> {1, 1, 1, 1, 4, 1}|>, <|
       "STJ" -> {3, 1, 4}, "STJSTJ" -> {1, 1, 1, 1, 4, 2}|>, <|
       "STJ" -> {3, 1, 1}, "STJSTJ" -> {1, 1, 1, 1, 4, 3}|>, <|
       "STJ" -> {3, 1, 2}, "STJSTJ" -> {1, 1, 1, 1, 4, 4}|>, <|
       "STJ" -> {2, 4, 1}, "STJSTJ" -> {1, 1, 1, 2, 1, 1}|>, <|
       "STJ" -> {2, 4, 2}, "STJSTJ" -> {1, 1, 1, 2, 1, 2}|>, <|
       "STJ" -> {2, 4, 3}, "STJSTJ" -> {1, 1, 1, 2, 1, 3}|>, <|
       "STJ" -> {2, 4, 4}, "STJSTJ" -> {1, 1, 1, 2, 1, 4}|>, <|
       "STJ" -> {2, 1, 3}, "STJSTJ" -> {1, 1, 1, 2, 2, 1}|>, <|
       "STJ" -> {2, 1, 4}, "STJSTJ" -> {1, 1, 1, 2, 2, 2}|>, <|
       "STJ" -> {2, 1, 1}, "STJSTJ" -> {1, 1, 1, 2, 2, 3}|>, <|
       "STJ" -> {2, 1, 2}, "STJSTJ" -> {1, 1, 1, 2, 2, 4}|>, <|
       "STJ" -> {2, 2, 3}, "STJSTJ" -> {1, 1, 1, 2, 3, 1}|>, <|
       "STJ" -> {2, 2, 4}, "STJSTJ" -> {1, 1, 1, 2, 3, 2}|>, <|
       "STJ" -> {2, 2, 1}, "STJSTJ" -> {1, 1, 1, 2, 3, 3}|>, <|
       "STJ" -> {2, 2, 2}, "STJSTJ" -> {1, 1, 1, 2, 3, 4}|>, <|
       "STJ" -> {2, 3, 3}, "STJSTJ" -> {1, 1, 1, 2, 4, 1}|>, <|
       "STJ" -> {2, 3, 4}, "STJSTJ" -> {1, 1, 1, 2, 4, 2}|>, <|
       "STJ" -> {2, 3, 1}, "STJSTJ" -> {1, 1, 1, 2, 4, 3}|>, <|
       "STJ" -> {2, 3, 2}, "STJSTJ" -> {1, 1, 1, 2, 4, 4}|>, <|
       "STJ" -> {1, 4, 2}, "STJSTJ" -> {1, 1, 1, 3, 1, 1}|>, <|
       "STJ" -> {1, 4, 3}, "STJSTJ" -> {1, 1, 1, 3, 1, 2}|>, <|
       "STJ" -> {1, 4, 4}, "STJSTJ" -> {1, 1, 1, 3, 1, 3}|>, <|
       "STJ" -> {1, 4, 1}, "STJSTJ" -> {1, 1, 1, 3, 1, 4}|>, <|
       "STJ" -> {1, 3, 2}, "STJSTJ" -> {1, 1, 1, 3, 2, 1}|>, <|
       "STJ" -> {1, 3, 3}, "STJSTJ" -> {1, 1, 1, 3, 2, 2}|>, <|
       "STJ" -> {1, 3, 4}, "STJSTJ" -> {1, 1, 1, 3, 2, 3}|>, <|
       "STJ" -> {1, 3, 1}, "STJSTJ" -> {1, 1, 1, 3, 2, 4}|>, <|
       "STJ" -> {1, 2, 2}, "STJSTJ" -> {1, 1, 1, 3, 3, 1}|>, <|
       "STJ" -> {1, 2, 3}, "STJSTJ" -> {1, 1, 1, 3, 3, 2}|>, <|
       "STJ" -> {1, 2, 4}, "STJSTJ" -> {1, 1, 1, 3, 3, 3}|>, <|
       "STJ" -> {1, 2, 1}, "STJSTJ" -> {1, 1, 1, 3, 3, 4}|>, <|
       "STJ" -> {1, 1, 2}, "STJSTJ" -> {1, 1, 1, 3, 4, 1}|>, <|
       "STJ" -> {1, 1, 3}, "STJSTJ" -> {1, 1, 1, 3, 4, 2}|>, <|
       "STJ" -> {1, 1, 4}, "STJSTJ" -> {1, 1, 1, 3, 4, 3}|>, <|
       "STJ" -> {1, 1, 1}, "STJSTJ" -> {1, 1, 1, 3, 4, 4}|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "STJSTJ"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "STJSTJ" -> 
            TypeSystem`PackageScope`ElidedShape[1]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "STJSTJ"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 6]}], 48], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "STJSTJ"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "STJSTJ" -> 
            TypeSystem`PackageScope`ElidedShape[1]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "STJSTJ"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 6]}], 48], "Path" -> {}, 
     "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     48, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJSTJ", 
                  Style[
                  "STJSTJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJSTJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJSTJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 1, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 1, 2}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 1, 3}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 1, 4}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 2, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 2, 2}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 2, 3}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 2, 4}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 3, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 3, 2}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 3, 3}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 1, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 1, 3, 4}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["STJSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["STJSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-12) 
                    If[True, 48, 1], {1, 48 - -12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-12) 
                    If[False, 48, 1], {1, 48 - -12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 12, " of ", 
                    Style[48, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 12, " of ", 
                    Style[48, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    12 If[False, 48, 1], {1, 48 - 12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    12 If[True, 48, 1], {1, 48 - 12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{120., {157.515625, 161.484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{120., {157.515625, 161.484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8521311592339687`*^9, 3.852131384179172*^9, {3.852135984035774*^9, 
   3.8521359940956993`*^9}, 3.852824264353857*^9, 3.852824317547072*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"456d0836-9276-4744-9da2-3457b9edd589"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"S", "\[IndentingNewLine]", "T", "\[IndentingNewLine]", "J", "\
\[IndentingNewLine]", 
 RowBox[{"T", "-", 
  RowBox[{"J", ".", "S"}]}]}], "Input",
 CellChangeTimes->{{3.8528246404047537`*^9, 3.852824660056988*^9}, {
  3.85282470040914*^9, 3.852824701345336*^9}, {3.852828465403664*^9, 
  3.852828470004939*^9}, {3.8528285239760237`*^9, 3.852828626710286*^9}, {
  3.85282891677958*^9, 3.8528289555276127`*^9}, {3.852829250901635*^9, 
  3.852829252716673*^9}, {3.852829300584038*^9, 3.8528293208271513`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"3b9fe13b-814a-4d9e-98a1-b85b215d1e1e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.85282466060004*^9, 3.852824701688323*^9, 3.852828470415495*^9, {
   3.852828525823496*^9, 3.852828587072646*^9}, 3.852828627132367*^9, {
   3.8528289204065447`*^9, 3.852828955875759*^9}, 3.85282925302446*^9, {
   3.852829300862463*^9, 3.852829321217716*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"013a3e27-4e74-4b22-aefb-730a0bbdf885"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", "0"},
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.85282466060004*^9, 3.852824701688323*^9, 3.852828470415495*^9, {
   3.852828525823496*^9, 3.852828587072646*^9}, 3.852828627132367*^9, {
   3.8528289204065447`*^9, 3.852828955875759*^9}, 3.85282925302446*^9, {
   3.852829300862463*^9, 3.8528293212248363`*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"43998346-edad-4741-a453-e54f16ac6eee"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "1"},
     {"1", "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.85282466060004*^9, 3.852824701688323*^9, 3.852828470415495*^9, {
   3.852828525823496*^9, 3.852828587072646*^9}, 3.852828627132367*^9, {
   3.8528289204065447`*^9, 3.852828955875759*^9}, 3.85282925302446*^9, {
   3.852829300862463*^9, 3.852829321230743*^9}},
 CellLabel->
  "Out[157]=",ExpressionUUID->"08afdf37-419f-4a61-a319-a85501da86d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "+", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "+", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.85282466060004*^9, 3.852824701688323*^9, 3.852828470415495*^9, {
   3.852828525823496*^9, 3.852828587072646*^9}, 3.852828627132367*^9, {
   3.8528289204065447`*^9, 3.852828955875759*^9}, 3.85282925302446*^9, {
   3.852829300862463*^9, 3.852829321234736*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"6abe384e-44b7-42bd-b3b5-40e1038aeaaa"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gens", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "8"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stj2", " ", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixPower", "[", 
           RowBox[{
            RowBox[{"el", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"pwr", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{
            RowBox[{"el", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"pwr", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{
            RowBox[{"el", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"pwr", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ")"}], "//", 
        "MatrixForm"}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"pwr", ",", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"el", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"el", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"el", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], " ", 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"el", ",", 
       RowBox[{"Permutations", "[", "gens", "]"}]}], "}"}]}], "\n", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.852214550893375*^9, 3.8522147317494392`*^9}, {
  3.852215213590083*^9, 3.852215226332745*^9}, {3.85221531500583*^9, 
  3.852215320652523*^9}, {3.8522154126863317`*^9, 3.8522154399729967`*^9}, {
  3.8522161274383173`*^9, 3.8522163112792187`*^9}, {3.8522163949727697`*^9, 
  3.852216458150991*^9}, {3.852216528793825*^9, 3.852216560318604*^9}, {
  3.8522166419353237`*^9, 3.8522167368062763`*^9}, {3.852216775688547*^9, 
  3.85221677752925*^9}, {3.852216849240547*^9, 3.852216919958139*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"b6afb732-936b-40ba-b81a-7969effe93ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tstj", " ", "=", 
   RowBox[{
    RowBox[{"Table", "[", "\n", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<El\>\"", "->", 
         RowBox[{
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"S", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"J", ",", 
            RowBox[{"pwrs", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<TSTJ\>\"", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"pwrs", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}]}], "|>"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"pwrs", ",", " ", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "3", ",", "4", ",", "4"}], "}"}], "]"}], "//", 
         "Tuples"}]}], "}"}]}], "\n", "]"}], "//", "Dataset"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.852723571816031*^9, 3.852723644399328*^9}, {
  3.8527236749581203`*^9, 3.852723682292405*^9}, {3.852731137774538*^9, 
  3.852731186336487*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"185ca819-4faa-497f-8fb6-d599212e252d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"JoinAcross", "[", 
       RowBox[{"stj", ",", "tstj", ",", "\"\<El\>\"", ",", "\"\<Inner\>\""}], 
       "]"}], "[", 
      RowBox[{"KeyDrop", "[", "\"\<El\>\"", "]"}], "]"}], "[", 
     RowBox[{"GroupBy", "[", "\"\<STJ\>\"", "]"}], "]"}], "[", 
    RowBox[{"All", ",", "1"}], "]"}], "[", "Values", "]"}], "[", 
  RowBox[{"SortBy", "[", "\"\<TSTJ\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8527236540350246`*^9, 3.852723654197379*^9}, 
   3.85272369538694*^9, {3.852723790095945*^9, 3.852723795500555*^9}, {
   3.8527238655326977`*^9, 3.8527238689213467`*^9}, {3.852724086024889*^9, 
   3.852724089245144*^9}, {3.852724144775332*^9, 3.85272414850677*^9}, {
   3.852724586816553*^9, 3.852724596885565*^9}, {3.852731191714329*^9, 
   3.85273119784974*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"ee54f765-0d27-4396-9eee-573b8270b93a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"STJ" -> {2, 4, 3}, "TSTJ" -> {1, 1, 1, 1}|>, <|
       "STJ" -> {2, 4, 4}, "TSTJ" -> {1, 1, 1, 2}|>, <|
       "STJ" -> {2, 4, 1}, "TSTJ" -> {1, 1, 1, 3}|>, <|
       "STJ" -> {2, 4, 2}, "TSTJ" -> {1, 1, 1, 4}|>, <|
       "STJ" -> {2, 1, 1}, "TSTJ" -> {1, 1, 2, 1}|>, <|
       "STJ" -> {2, 1, 2}, "TSTJ" -> {1, 1, 2, 2}|>, <|
       "STJ" -> {2, 1, 3}, "TSTJ" -> {1, 1, 2, 3}|>, <|
       "STJ" -> {2, 1, 4}, "TSTJ" -> {1, 1, 2, 4}|>, <|
       "STJ" -> {2, 2, 1}, "TSTJ" -> {1, 1, 3, 1}|>, <|
       "STJ" -> {2, 2, 2}, "TSTJ" -> {1, 1, 3, 2}|>, <|
       "STJ" -> {2, 2, 3}, "TSTJ" -> {1, 1, 3, 3}|>, <|
       "STJ" -> {2, 2, 4}, "TSTJ" -> {1, 1, 3, 4}|>, <|
       "STJ" -> {2, 3, 1}, "TSTJ" -> {1, 1, 4, 1}|>, <|
       "STJ" -> {2, 3, 2}, "TSTJ" -> {1, 1, 4, 2}|>, <|
       "STJ" -> {2, 3, 3}, "TSTJ" -> {1, 1, 4, 3}|>, <|
       "STJ" -> {2, 3, 4}, "TSTJ" -> {1, 1, 4, 4}|>, <|
       "STJ" -> {1, 4, 4}, "TSTJ" -> {1, 2, 1, 1}|>, <|
       "STJ" -> {1, 4, 1}, "TSTJ" -> {1, 2, 1, 2}|>, <|
       "STJ" -> {1, 4, 2}, "TSTJ" -> {1, 2, 1, 3}|>, <|
       "STJ" -> {1, 4, 3}, "TSTJ" -> {1, 2, 1, 4}|>, <|
       "STJ" -> {1, 3, 4}, "TSTJ" -> {1, 2, 2, 1}|>, <|
       "STJ" -> {1, 3, 1}, "TSTJ" -> {1, 2, 2, 2}|>, <|
       "STJ" -> {1, 3, 2}, "TSTJ" -> {1, 2, 2, 3}|>, <|
       "STJ" -> {1, 3, 3}, "TSTJ" -> {1, 2, 2, 4}|>, <|
       "STJ" -> {1, 2, 4}, "TSTJ" -> {1, 2, 3, 1}|>, <|
       "STJ" -> {1, 2, 1}, "TSTJ" -> {1, 2, 3, 2}|>, <|
       "STJ" -> {1, 2, 2}, "TSTJ" -> {1, 2, 3, 3}|>, <|
       "STJ" -> {1, 2, 3}, "TSTJ" -> {1, 2, 3, 4}|>, <|
       "STJ" -> {1, 1, 4}, "TSTJ" -> {1, 2, 4, 1}|>, <|
       "STJ" -> {1, 1, 1}, "TSTJ" -> {1, 2, 4, 2}|>, <|
       "STJ" -> {1, 1, 2}, "TSTJ" -> {1, 2, 4, 3}|>, <|
       "STJ" -> {1, 1, 3}, "TSTJ" -> {1, 2, 4, 4}|>, <|
       "STJ" -> {3, 2, 1}, "TSTJ" -> {1, 3, 1, 1}|>, <|
       "STJ" -> {3, 2, 2}, "TSTJ" -> {1, 3, 1, 2}|>, <|
       "STJ" -> {3, 2, 3}, "TSTJ" -> {1, 3, 1, 3}|>, <|
       "STJ" -> {3, 2, 4}, "TSTJ" -> {1, 3, 1, 4}|>, <|
       "STJ" -> {3, 3, 1}, "TSTJ" -> {1, 3, 2, 1}|>, <|
       "STJ" -> {3, 3, 2}, "TSTJ" -> {1, 3, 2, 2}|>, <|
       "STJ" -> {3, 3, 3}, "TSTJ" -> {1, 3, 2, 3}|>, <|
       "STJ" -> {3, 3, 4}, "TSTJ" -> {1, 3, 2, 4}|>, <|
       "STJ" -> {3, 4, 1}, "TSTJ" -> {1, 3, 3, 1}|>, <|
       "STJ" -> {3, 4, 2}, "TSTJ" -> {1, 3, 3, 2}|>, <|
       "STJ" -> {3, 4, 3}, "TSTJ" -> {1, 3, 3, 3}|>, <|
       "STJ" -> {3, 4, 4}, "TSTJ" -> {1, 3, 3, 4}|>, <|
       "STJ" -> {3, 1, 3}, "TSTJ" -> {1, 3, 4, 1}|>, <|
       "STJ" -> {3, 1, 4}, "TSTJ" -> {1, 3, 4, 2}|>, <|
       "STJ" -> {3, 1, 1}, "TSTJ" -> {1, 3, 4, 3}|>, <|
       "STJ" -> {3, 1, 2}, "TSTJ" -> {1, 3, 4, 4}|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "TSTJ"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "TSTJ" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "TSTJ"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 4]}], 48], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "STJ"} -> 1, {All, "TSTJ"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "STJ" -> TypeSystem`PackageScope`UnknownShape[False], "TSTJ" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"STJ", "TSTJ"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 4]}], 48], "Path" -> {}, 
     "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     48, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 37, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "STJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "STJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TSTJ", 
                  Style[
                  "TSTJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TSTJ"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TSTJ"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{37, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 2, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{37, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{38, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 2, 2}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{38, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{39, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 2, 3}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{39, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{40, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 2, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 2, 4}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{40, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{41, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 3, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{41, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{42, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 3, 2}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{42, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{43, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 3, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 3, 3}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{43, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{44, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 3, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 3, 4}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{44, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{45, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 4, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 4, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{45, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 4}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{46, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 4, 2}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{46, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{47, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 4, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 4, 3}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{47, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{48, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 3, 4, 4}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 3, 4, 4}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{48, 
                    Key["TSTJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48, 
                 Key["TSTJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 12 
                    If[True, 48, 1], {1, 48 - -12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 12 
                    If[False, 48, 1], {1, 48 - -12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 37, "\[Dash]", 48, " of ", 
                    Style[48, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 37, "\[Dash]", 48, " of ", 
                    Style[48, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    12 If[False, 48, 1], {1, 48 - 12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    12 If[True, 48, 1], {1, 48 - 12 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{122., {157.515625, 161.484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{122., {157.515625, 161.484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.852723662038578*^9, 3.852723696178596*^9}, 
   3.852723796943451*^9, 3.852723869332552*^9, 3.852724089672304*^9, 
   3.8527241490310717`*^9, {3.8527245941215754`*^9, 3.852724597319262*^9}, 
   3.852731198332131*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"e02018f8-e608-48be-bca1-3416e9d58a55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"grpTb", "[", 
    RowBox[{"All", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#El", "===", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", "1"}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"S", ",", "1"}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"T", ",", "1"}], "]"}], ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"J", ",", "1"}], "]"}]}], ")"}]}], "&"}], "]"}]}], "]"}], 
   "[", 
   RowBox[{"All", ",", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Not", "@", 
       RowBox[{"MissingQ", "[", "#", "]"}]}], "&"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.852724989377449*^9, {3.852731290990693*^9, 3.852731376582931*^9}, {
   3.852731419923785*^9, 3.852731512463586*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b581030c-23fb-42f9-b892-3e27fc51fb6f"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["Failure",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             FrameBox[
              StyleBox["\"\[WarningSign]\"", 
               Directive["Message", 35], StripOnInput -> False], 
              ContentPadding -> False, FrameStyle -> None, 
              FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
             GridBox[{{
                TagBox[
                 GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"#El\\\", \\\"===\\\", \
RowBox[{RowBox[{\\\"MatrixPower\\\", \\\"[\\\", RowBox[{\\\"T\\\", \\\",\\\", \
\\\"1\\\"}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"MatrixPower\\\", \\\"[\\\", \
RowBox[{\\\"S\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\
\"MatrixPower\\\", \\\"[\\\", RowBox[{\\\"T\\\", \\\",\\\", \\\"1\\\"}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"MatrixPower\\\", \\\"[\\\", RowBox[{\\\"J\
\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}]}], \\\"&\\\"}], \\\")\\\"}], \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]]}], \\\",\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]], \\\",\\\", FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]], \\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]]}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]]}], \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \
Function[Short[Slot[1], 5]]]\\) is expected to have an Association as the \
first argument.\"", "SummaryItem"]}}, 
                  GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               
                TagBox[
                 GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Function", "SummaryItem"]}}, 
                  GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             FrameBox[
              StyleBox["\"\[WarningSign]\"", 
               Directive["Message", 35], StripOnInput -> False], 
              ContentPadding -> False, FrameStyle -> None, 
              FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
             GridBox[{{
                TagBox[
                 GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"#El\\\", \\\"===\\\", \
RowBox[{RowBox[{\\\"MatrixPower\\\", \\\"[\\\", RowBox[{\\\"T\\\", \\\",\\\", \
\\\"1\\\"}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"MatrixPower\\\", \\\"[\\\", \
RowBox[{\\\"S\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\
\"MatrixPower\\\", \\\"[\\\", RowBox[{\\\"T\\\", \\\",\\\", \\\"1\\\"}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"MatrixPower\\\", \\\"[\\\", RowBox[{\\\"J\
\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]}]}], \\\"&\\\"}], \\\")\\\"}], \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]]}], \\\",\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]], \\\",\\\", FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]], \\\",\\\", RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]]}], \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]]}], \\\",\\\", RowBox[{\\\"-\\\", \
FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]]}], \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \
Function[Short[Slot[1], 5]]]\\) is expected to have an Association as the \
first argument.\"", "SummaryItem"]}}, 
                  GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               
                TagBox[
                 GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Function", "SummaryItem"]}}, 
                  GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Failure[
   Function, <|
    "MessageTemplate" :> MessageName[Function, "slot1"], "MessageParameters" -> {
       HoldForm["El"], 
       HoldForm[Slot["El"] === Dot[
          MatrixPower[$CellContext`T, 1], 
          MatrixPower[$CellContext`S, 1], 
          MatrixPower[$CellContext`T, 1], 
          MatrixPower[$CellContext`J, 1]]& ], 
       HoldForm[
        (Slot["El"] === Dot[
          MatrixPower[$CellContext`T, 1], 
          MatrixPower[$CellContext`S, 1], 
          MatrixPower[$CellContext`T, 1], 
          MatrixPower[$CellContext`J, 1]]& )[{{
          0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
          2^Rational[-1, 2], -2^Rational[-1, 2], 0, 
           0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}}]]}|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"All", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"MissingQ", "[", "#1", "]"}]}], "&"}], "]"}]}], "]"}]], "Output",\

 CellChangeTimes->{{3.852731368678111*^9, 3.85273137707236*^9}, {
  3.852731430167514*^9, 3.852731441485119*^9}, {3.852731486849036*^9, 
  3.8527315128730593`*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"5cb2e19a-b5ab-4aab-a3b3-171f37ea7ddf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"grpTb", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#El", "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{"S", ",", "1"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"S", ",", "2"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"T", ",", "3"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"J", ",", "2"}], "]"}]}], ")"}]}], "&"}], "]"}], "]"}], "[", 
  
  RowBox[{"All", ",", 
   RowBox[{"{", "\"\<STJ\>\"", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grpTb", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#El", "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixPower", "[", 
         RowBox[{"T", ",", "1"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"S", ",", "3"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"T", ",", "3"}], "]"}], ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"J", ",", "2"}], "]"}]}], ")"}]}], "&"}], "]"}], "]"}], "[", 
  
  RowBox[{"All", ",", 
   RowBox[{"{", "\"\<STJ\>\"", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.852731568821899*^9, 3.852731661927217*^9}, {
  3.852731704213381*^9, 3.852731770666651*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"d30090ab-ca7d-4a2b-a6a3-8bc6155cb3d4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"STJ" -> {3, 3, 2}|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[33.6], 
           TypeSystem`PackageScope`UnknownShape[False]]], 13, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 3], 1], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[33.6], 
           TypeSystem`PackageScope`UnknownShape[False]]], 13, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 3], 1], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{79., {17.015625, 20.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{79., {17.015625, 20.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.852731593040929*^9, 3.852731624838809*^9}, 
   3.8527316624720163`*^9, {3.85273172770618*^9, 3.852731771210042*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"c4466e00-f3ae-48c7-8b72-986a1fe4cc30"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"STJ" -> {3, 4, 2}|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[33.6], 
           TypeSystem`PackageScope`UnknownShape[False]]], 13, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 3], 1], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[33.6], 
           TypeSystem`PackageScope`UnknownShape[False]]], 13, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 3], 1], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["STJ", 
                  Style[
                  "STJ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 4, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 4, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["STJ"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["STJ"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{79., {17.015625, 20.984375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{79., {17.015625, 20.984375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.852731593040929*^9, 3.852731624838809*^9}, 
   3.8527316624720163`*^9, {3.85273172770618*^9, 3.852731771259396*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"7cbdfa9d-4d2c-4b52-ab20-2905c1dbc9bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", ".", "T", ".", "J", ".", 
  RowBox[{"MatrixPower", "[", 
   RowBox[{"S", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852734203050769*^9, 3.852734206978188*^9}, {
  3.852734243885212*^9, 3.8527343283358603`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"d4455398-f6e7-4e92-8b0f-692098557f04"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0"},
     {"0", 
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      FractionBox["1", 
       SqrtBox["2"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.852734248834091*^9, 3.8527343289089947`*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"dd3c9ac9-c5d8-4f7b-9b9d-aa90633a9da6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPower", "[", 
  RowBox[{"S", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.852734339595305*^9, 
  3.8527343497033377`*^9}},ExpressionUUID->"7003a27e-e1af-49f7-9971-\
09fff1930ca4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0"},
     {
      FractionBox["1", 
       SqrtBox["2"]], "0", "0", 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      FractionBox["1", 
       SqrtBox["2"]], "0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      FractionBox["1", 
       SqrtBox["2"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.852734340396264*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"37bff54e-1a4d-4090-9633-5167bf1946d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blah", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"S", ",", "pwrs"}], "]"}], "//", "MatrixForm"}], ",", "\n", 
    RowBox[{"{", 
     RowBox[{"pwrs", ",", " ", 
      RowBox[{"Range", "[", "6", "]"}]}], "}"}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.852734567187249*^9, 3.852734638113542*^9}, {
  3.8527445053969793`*^9, 3.852744519538065*^9}, {3.852744558286874*^9, 
  3.8527450198441467`*^9}, {3.852745121575803*^9, 3.852745161574836*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"0d14caa6-f2d5-4af3-9fff-4ea766aab2fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.852744765997222*^9, 3.852744837270227*^9}, {
  3.852744922970047*^9, 3.852745020471158*^9}, {3.852745144266314*^9, 
  3.852745161869787*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"e66ff81e-73e1-4d0e-8b8f-b50eb5012224"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"QI", ".", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{"T", ",", "pwrs"}], "]"}]}], "//", "MatrixForm"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"pwrs", ",", " ", 
     RowBox[{"Range", "[", "8", "]"}]}], "}"}]}], "\n", "]"}]], "Input",
 CellChangeTimes->{{3.8527451935479183`*^9, 3.852745215879613*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"9f2453a6-f79d-4d20-8c4b-8fc1cbd1b774"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0"},
       {
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"1", "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8527451958304033`*^9, 3.8527452162131443`*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"3a85d1b6-006b-4a2d-9ad0-64ed2526676b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPower", "[", 
  RowBox[{"S", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.85282492403421*^9, 3.852824933111369*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"1fa461ac-12cf-44b2-a39b-976cc443a668"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.852824934229858*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"8f8720da-ca7a-4c0c-a336-3541aef5144c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blah", " ", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"MatrixPower", "[", 
        RowBox[{"R", ",", 
         RowBox[{"pwrs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ".", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{
         RowBox[{"S", ".", "S"}], ",", 
         RowBox[{"pwrs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{"QI", ",", 
         RowBox[{"pwrs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{"J", ",", 
         RowBox[{"pwrs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ".", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{"K", ",", 
         RowBox[{"pwrs", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}], "//", "MatrixForm"}], 
     ",", "\n", 
     RowBox[{"{", 
      RowBox[{"pwrs", ",", " ", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3", ",", "4", ",", "4", ",", "4"}], "}"}], "]"}],
         "//", "Tuples"}]}], "}"}]}], "\n", "]"}], "//", 
   "DeleteDuplicates"}]}]], "Input",
 CellChangeTimes->{{3.852825001883091*^9, 3.852825112264256*^9}, {
   3.852825165205091*^9, 3.8528251884107523`*^9}, {3.852825235915781*^9, 
   3.852825316344948*^9}, {3.852825350813818*^9, 3.852825397079343*^9}, 
   3.852825514467574*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"9df95d9e-c4f4-4581-ade8-f6ec80cb6b46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", 
        FractionBox["1", 
         SqrtBox["2"]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0", "0", 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"]},
       {
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "1", "0", "0"},
       {"1", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {
        RowBox[{"-", "1"}], "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]},
       {
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0"},
       {
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", "1"},
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"1", "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.852825151073724*^9, 3.852825188782345*^9}, 
   3.852825236559074*^9, {3.8528252722098923`*^9, 3.852825316754678*^9}, {
   3.8528253590219193`*^9, 3.8528253976524897`*^9}, 3.8528255149536753`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"2dac28fa-af80-4187-a784-267516ec99ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"K", ".", "H"}]}], "Input",
 CellChangeTimes->{{3.852825444360807*^9, 3.852825445801598*^9}, {
  3.852827032616726*^9, 3.852827083924704*^9}, {3.852827126382119*^9, 
  3.852827184947486*^9}, {3.8528272222974777`*^9, 3.852827223502534*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"660c3627-a985-416a-99bd-c68aeff138b4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.852827062304954*^9, 3.852827084547276*^9}, {
   3.852827147102303*^9, 3.852827185276342*^9}, 3.852827223984311*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"5e6c92f5-d480-4846-88a7-35ab00e12dd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPower", "[", 
  RowBox[{"H", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.852827110274108*^9, 3.8528271232014017`*^9}, {
  3.852827167716888*^9, 3.852827248202434*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"350b687c-af3b-4a3d-9e7f-0efdbac0760a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8528271707851467`*^9, 3.8528272485800543`*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"2bd2c1a1-24bf-469f-bbc9-34052a99af87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "S", "]"}], ".", "S"}]], "Input",
 CellChangeTimes->{{3.8528273773904047`*^9, 3.85282741693259*^9}, {
  3.852827478163583*^9, 3.852827486584969*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"2026c154-d81e-4344-a87c-2ed309eb0b3b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.852827382380658*^9, 3.852827417304854*^9}, 
   3.8528274869275303`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"0ffa61bd-dbf8-461a-8063-accfbdd5e8ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "T", "]"}]], "Input",
 CellChangeTimes->{{3.852827492282654*^9, 3.8528275282090073`*^9}, {
  3.85282792568165*^9, 3.852827925818985*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"a2881aa8-4bd3-40fe-82ae-874fa4335352"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      FractionBox["1", 
       SqrtBox["2"]], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      FractionBox["1", 
       SqrtBox["2"]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8528274985081787`*^9, 3.852827528638001*^9}, 
   3.852827926142179*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"49eda4db-b4f8-4c1c-b9a9-1378793e872d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["2", "5"]], "Input",
 CellChangeTimes->{{3.852827623604991*^9, 3.8528276252887383`*^9}, {
  3.8528276730363913`*^9, 3.852827679622854*^9}, {3.852827733071184*^9, 
  3.852827733438599*^9}},ExpressionUUID->"d2435de3-93af-4b4f-9e43-\
79949476638e"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.852827625688785*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"8370522a-b561-4f65-865f-71b131342b35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixPower", "[", 
    RowBox[{"S", ",", "a"}], "]"}], ".", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"T", ",", "b"}], "]"}], ".", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"J", ",", "c"}], "]"}], ".", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"S", ",", "m"}], "]"}], ".", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"T", ",", "n"}], "]"}], ".", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"J", ",", "p"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.852829361455768*^9, 3.8528294439111633`*^9}, {
  3.852829474987974*^9, 3.8528294859680967`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"25ca78f7-68fd-4716-9fa9-bc982139fe35"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"1", "+", "b", "+", "n"}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"1", "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"3", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "4"}], "-", "a", "-", 
         FractionBox["b", "2"], "-", "m", "-", 
         FractionBox["n", "2"]}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "m"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "b", "+", "n"}]]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox["3"]}]}], ")"}], 
           RowBox[{"a", "+", "m"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
             RowBox[{"b", "+", "n"}]], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SqrtBox["3"]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
             SqrtBox["3"]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
              RowBox[{"b", "+", "n"}]], " ", 
             SqrtBox["3"]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "c", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "b"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"1", "+", "n"}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "p", " ", "\[Pi]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "m"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"1", "+", "b", "+", "n"}]], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"a", "+", "m"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                RowBox[{"b", "+", "n"}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "+", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "b"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"], " ", 
                SqrtBox["3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
                 RowBox[{"b", "+", "n"}]], " ", 
                SqrtBox["3"]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"c", "+", "p"}], ")"}], " ", "\[Pi]"}]]}]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8528293754947777`*^9, 3.8528293828042927`*^9}, 
   3.8528294146663837`*^9, 3.852829445936915*^9, 3.8528295119574747`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"459c07d3-43ed-4fce-ac2a-f72959375649"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["48", "3"]], "Input",
 CellChangeTimes->{{3.8528301439276237`*^9, 3.852830170891626*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"89b2252e-183f-450f-9235-75eb29eddf66"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{{3.852830148841576*^9, 3.852830171366054*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"8bfa1cb1-8ddc-48f2-8042-22b2667b7b61"]
}, Open  ]]
},
WindowSize->{1520, 702},
WindowMargins->{{292, 108}, {Automatic, 168}},
CellContext->Notebook,
Magnification:>0.75 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "felicity.nb"]]}, Visible -> False, 
  FrontEndVersion -> "13.0 for Linux x86 (64-bit) (December 2, 2021)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"2b89d15d-d745-4e3c-a710-0fd0ba94ca25"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 1297, 27, 50, "Input",ExpressionUUID->"baeca54b-74ca-4025-93c7-af758501eb28",
 InitializationGroup->True],
Cell[1700, 42, 195, 4, 24, "Text",ExpressionUUID->"364d5abc-afe4-45ea-adb1-599c744a9f8f",
 InitializationGroup->True],
Cell[1898, 48, 3297, 87, 110, "Input",ExpressionUUID->"6d14bc35-bb58-435b-8266-e5fc0165bb47",
 InitializationCell->True,
 InitializationGroup->True],
Cell[5198, 137, 261, 5, 24, "Text",ExpressionUUID->"b0d397b9-7a7a-4c5b-b2da-bb39d4f1166f",
 InitializationGroup->True],
Cell[5462, 144, 1752, 54, 148, "Input",ExpressionUUID->"63966507-815f-4093-bd26-7ef8b15e5984",
 InitializationCell->True,
 InitializationGroup->True],
Cell[7217, 200, 291, 6, 24, "Text",ExpressionUUID->"b76c9e69-1287-420f-acff-9b6a3eb502cf"],
Cell[7511, 208, 13482, 371, 1040, "Input",ExpressionUUID->"7960c0d3-2cfc-44cc-aa88-8da9d4bc9e59",
 InitializationGroup->True],
Cell[20996, 581, 487, 9, 24, "Text",ExpressionUUID->"cf13a30b-74ce-45e3-83a1-a21d0da75abd"],
Cell[CellGroupData[{
Cell[21508, 594, 1015, 23, 40, "Code",ExpressionUUID->"ee9d0576-a00a-4940-a8f7-f430e928a5ab"],
Cell[22526, 619, 177749, 3399, 347, "Output",ExpressionUUID->"b9f7e088-67f6-4296-922d-ca47807a768d"]
}, Open  ]],
Cell[200290, 4021, 173, 3, 24, "Text",ExpressionUUID->"ec5d2943-b785-485d-b367-4676d79f2aaa"],
Cell[CellGroupData[{
Cell[200488, 4028, 194, 3, 40, "Code",ExpressionUUID->"d99605c7-4117-438d-8830-f42283db9885"],
Cell[200685, 4033, 685, 9, 37, "Output",ExpressionUUID->"cf0852cb-4704-4fa7-ae70-702e21fa77ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201407, 4047, 280, 5, 34, "Input",ExpressionUUID->"0a76e315-932a-47a1-8b7a-7bc62ccfc284"],
Cell[201690, 4054, 677, 19, 75, "Output",ExpressionUUID->"94ceaecb-c572-411a-a792-173078faac4b"]
}, Open  ]],
Cell[202382, 4076, 1137, 27, 24, "Text",ExpressionUUID->"a9ec4188-2f64-48a4-beaa-b44d4274d2cc"],
Cell[CellGroupData[{
Cell[203544, 4107, 2407, 67, 80, "Input",ExpressionUUID->"1cd4078b-d962-486d-b89c-742168c886ed"],
Cell[205954, 4176, 26152, 465, 87, "Output",ExpressionUUID->"184fadd7-6641-4206-be66-5485d3cc695e"],
Cell[232109, 4643, 27156, 483, 87, "Output",ExpressionUUID->"93ea8e09-37af-49ba-a6c9-346cd8475f43"],
Cell[259268, 5128, 63438, 1158, 329, "Output",ExpressionUUID->"379b9e8d-75ef-44c5-a74c-34d62b6856a7"],
Cell[322709, 6288, 1020, 25, 75, "Output",ExpressionUUID->"e5b0ec44-9755-4d32-b5ee-735ae34100ff"]
}, Open  ]],
Cell[323744, 6316, 751, 20, 24, "Text",ExpressionUUID->"860f62ad-b605-4044-b17e-ca8c7d7cb6f5"],
Cell[CellGroupData[{
Cell[324520, 6340, 763, 21, 34, "Input",ExpressionUUID->"8e4ba770-2645-4924-95a7-5fbed674976b"],
Cell[325286, 6363, 26563, 489, 135, "Output",ExpressionUUID->"919e7ed0-8f61-44ff-8181-c350a8dc8171"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351886, 6857, 716, 15, 34, "Input",ExpressionUUID->"51b4bd50-4ef0-44a8-9bc6-be07c4a62a0f"],
Cell[352605, 6874, 181582, 3558, 329, "Output",ExpressionUUID->"1fb9a3e3-7939-40d3-86ef-9565eab399dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534224, 10437, 629, 14, 34, "Input",ExpressionUUID->"e13694d0-a0da-4a49-9186-0d4bb4a81ef0"],
Cell[534856, 10453, 138902, 2696, 241, "Output",ExpressionUUID->"f56cf5db-11a1-4131-bf71-f2fa13eb5f11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673795, 13154, 575, 14, 34, "Input",ExpressionUUID->"ee574540-1f6d-4ef5-a624-78b3811ddd29"],
Cell[674373, 13170, 117758, 2269, 197, "Output",ExpressionUUID->"905df66e-24c0-47b7-8c33-fa40c443e237"]
}, Open  ]],
Cell[792146, 15442, 2829, 67, 95, "Input",ExpressionUUID->"c51eca23-d00f-4e0a-a53f-4d50d19455bc"],
Cell[CellGroupData[{
Cell[795000, 15513, 745, 17, 34, "Input",ExpressionUUID->"8c26c779-4483-4785-b77c-709c439cb781"],
Cell[795748, 15532, 81832, 1493, 347, "Output",ExpressionUUID->"456d0836-9276-4744-9da2-3457b9edd589"]
}, Open  ]],
Cell[CellGroupData[{
Cell[877617, 17030, 603, 10, 80, "Input",ExpressionUUID->"3b9fe13b-814a-4d9e-98a1-b85b215d1e1e"],
Cell[878223, 17042, 1460, 46, 99, "Output",ExpressionUUID->"013a3e27-4e74-4b22-aefb-730a0bbdf885"],
Cell[879686, 17090, 1308, 42, 103, "Output",ExpressionUUID->"43998346-edad-4741-a453-e54f16ac6eee"],
Cell[880997, 17134, 966, 26, 75, "Output",ExpressionUUID->"08afdf37-419f-4a61-a319-a85501da86d3"],
Cell[881966, 17162, 2038, 70, 103, "Output",ExpressionUUID->"6abe384e-44b7-42bd-b3b5-40e1038aeaaa"]
}, Open  ]],
Cell[884019, 17235, 2671, 69, 110, "Input",ExpressionUUID->"b6afb732-936b-40ba-b81a-7969effe93ce"],
Cell[886693, 17306, 1866, 49, 95, "Input",ExpressionUUID->"185ca819-4faa-497f-8fb6-d599212e252d"],
Cell[CellGroupData[{
Cell[888584, 17359, 931, 19, 34, "Input",ExpressionUUID->"ee54f765-0d27-4396-9eee-573b8270b93a"],
Cell[889518, 17380, 81323, 1492, 347, "Output",ExpressionUUID->"e02018f8-e608-48be-bca1-3416e9d58a55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[970878, 18877, 992, 28, 34, "Input",ExpressionUUID->"b581030c-23fb-42f9-b892-3e27fc51fb6f"],
Cell[971873, 18907, 8718, 163, 74, "Output",ExpressionUUID->"5cb2e19a-b5ab-4aab-a3b3-171f37ea7ddf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980628, 19075, 1403, 39, 50, "Input",ExpressionUUID->"d30090ab-ca7d-4a2b-a6a3-8bc6155cb3d4"],
Cell[982034, 19116, 23504, 413, 65, "Output",ExpressionUUID->"c4466e00-f3ae-48c7-8b72-986a1fe4cc30"],
Cell[1005541, 19531, 23504, 413, 65, "Output",ExpressionUUID->"7cbdfa9d-4d2c-4b52-ab20-2905c1dbc9bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029082, 19949, 331, 7, 34, "Input",ExpressionUUID->"d4455398-f6e7-4e92-8b0f-692098557f04"],
Cell[1029416, 19958, 1139, 40, 103, "Output",ExpressionUUID->"dd3c9ac9-c5d8-4f7b-9b9d-aa90633a9da6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030592, 20003, 215, 5, 34, "Input",ExpressionUUID->"7003a27e-e1af-49f7-9971-09fff1930ca4"],
Cell[1030810, 20010, 1113, 40, 103, "Output",ExpressionUUID->"37bff54e-1a4d-4090-9633-5167bf1946d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031960, 20055, 619, 13, 65, "Input",ExpressionUUID->"0d14caa6-f2d5-4af3-9fff-4ea766aab2fa"],
Cell[1032582, 20070, 6352, 208, 99, "Output",ExpressionUUID->"e66ff81e-73e1-4d0e-8b8f-b50eb5012224"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1038971, 20283, 463, 11, 65, "Input",ExpressionUUID->"9f2453a6-f79d-4d20-8c4b-8fc1cbd1b774"],
Cell[1039437, 20296, 6858, 228, 103, "Output",ExpressionUUID->"3a85d1b6-006b-4a2d-9ad0-64ed2526676b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046332, 20529, 231, 4, 34, "Input",ExpressionUUID->"1fa461ac-12cf-44b2-a39b-976cc443a668"],
Cell[1046566, 20535, 1307, 45, 99, "Output",ExpressionUUID->"8f8720da-ca7a-4c0c-a336-3541aef5144c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047910, 20585, 1557, 41, 65, "Input",ExpressionUUID->"9df95d9e-c4f4-4581-ade8-f6ec80cb6b46"],
Cell[1049470, 20628, 49630, 1702, 384, "Output",ExpressionUUID->"2dac28fa-af80-4187-a784-267516ec99ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099137, 22335, 974, 27, 65, "Input",ExpressionUUID->"660c3627-a985-416a-99bd-c68aeff138b4"],
Cell[1100114, 22364, 1315, 43, 99, "Output",ExpressionUUID->"5e6c92f5-d480-4846-88a7-35ab00e12dd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101466, 22412, 287, 6, 34, "Input",ExpressionUUID->"350b687c-af3b-4a3d-9e7f-0efdbac0760a"],
Cell[1101756, 22420, 1247, 42, 99, "Output",ExpressionUUID->"2bd2c1a1-24bf-469f-bbc9-34052a99af87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103040, 22467, 284, 6, 34, "Input",ExpressionUUID->"2026c154-d81e-4344-a87c-2ed309eb0b3b"],
Cell[1103327, 22475, 733, 21, 75, "Output",ExpressionUUID->"0ffa61bd-dbf8-461a-8063-accfbdd5e8ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1104097, 22501, 261, 5, 34, "Input",ExpressionUUID->"a2881aa8-4bd3-40fe-82ae-874fa4335352"],
Cell[1104361, 22508, 1117, 39, 103, "Output",ExpressionUUID->"49eda4db-b4f8-4c1c-b9a9-1378793e872d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105515, 22552, 275, 5, 34, "Input",ExpressionUUID->"d2435de3-93af-4b4f-9e43-79949476638e"],
Cell[1105793, 22559, 154, 3, 37, "Output",ExpressionUUID->"8370522a-b561-4f65-865f-71b131342b35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105984, 22567, 706, 18, 34, "Input",ExpressionUUID->"25ca78f7-68fd-4716-9fa9-bc982139fe35"],
Cell[1106693, 22587, 687973, 16937, 131, "Output",ExpressionUUID->"459c07d3-43ed-4fce-ac2a-f72959375649"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1794703, 39529, 199, 4, 48, "Input",ExpressionUUID->"89b2252e-183f-450f-9235-75eb29eddf66"],
Cell[1794905, 39535, 178, 3, 37, "Output",ExpressionUUID->"8bfa1cb1-8ddc-48f2-8042-22b2667b7b61"]
}, Open  ]]
}
]
*)

